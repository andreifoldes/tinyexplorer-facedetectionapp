name: Build Windows

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Node dependencies
      run: npm ci

    - name: Generate valid Windows ICO from square PNG
      run: |
        mkdir -p resources
        # Prefer known square 1024x1024 PNG
        SRC="graphics/icons/dragon-1024.png"
        if [ ! -f "$SRC" ]; then
          # Fallback to project PNG if exists
          SRC="resources/icons/1024x1024.png"
        fi
        echo "Generating resources/icon.ico from $SRC"
        npx --yes png-to-ico "$SRC" > resources/icon.ico
        echo "ICO generated at resources/icon.ico"
      shell: bash
    - name: Build Python bundle
      run: npm run python-build
      env:
        RETINAFACE_PYTHON: python
        PIP_DISABLE_PIP_VERSION_CHECK: '1'

    - name: Build React app
      run: npx craco build
      env:
        NODE_OPTIONS: "--openssl-legacy-provider"
        CI: false
        GENERATE_SOURCEMAP: false

    - name: Build Electron main process
      run: |
        npx tsc -p tsconfig.electronMain.json
        npx electron-builder --win --x64 --publish=never
      env:
        ELECTRON_BUILDER_CACHE: ${{ runner.temp }}\electron-builder-cache
        PYTHON: python

    - name: List build artifacts
      run: dir dist\ || echo "No dist directory"
      shell: cmd

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
        if-no-files-found: warn