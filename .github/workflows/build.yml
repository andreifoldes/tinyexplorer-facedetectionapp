name: Build and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Create simplified environment file
      run: |
        cat > environment-simplified.yml << EOF
        name: electron-python-sample
        channels:
          - defaults
        dependencies:
          - python=3.9
          - flask
          - flask-cors
          - pip
          - pip:
            - flask-graphql
            - graphene
            - opencv-python-headless
            - pillow
            - numpy
        EOF

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: '3.9'
        environment-file: environment-simplified.yml
        activate-environment: electron-python-sample

    - name: Install dependencies
      run: npm ci

    - name: Build Python bundle
      shell: bash -l {0}
      run: |
        conda activate electron-python-sample
        npm run python-build

    - name: Build React app
      run: |
        NODE_OPTIONS="--openssl-legacy-provider" npm run react-build

    - name: Build Electron app
      run: npm run main-build

    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          dist/*.AppImage
          dist/*.snap
          dist/*.deb
          dist/*.rpm

    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
          dist/*.msi
          dist/*.zip

    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          dist/*.dmg
          dist/*.pkg
          dist/*.zip

    - name: Release
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.AppImage
          dist/*.snap
          dist/*.deb
          dist/*.rpm
          dist/*.exe
          dist/*.msi
          dist/*.dmg
          dist/*.pkg
          dist/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}